{"version":3,"sources":["utility/context/Can.js","@core/layouts/components/layout-wrapper/index.js","router/routes/index.js","@core/layouts/BlankLayout.js","@core/components/customizer/index.js","@core/layouts/components/footer/index.js","@core/auth/jwt/jwtDefaultConfig.js","@core/auth/jwt/useJwt.js","@core/auth/jwt/jwtService.js","auth/jwt/useJwt.js","redux/actions/auth/index.js","assets/images/avatars/raviKukreja.jpg","@core/layouts/components/navbar/UserDropdown.js","@core/layouts/components/navbar/NotificationDropdown.js","utility/context/Internationalization.js","@core/layouts/components/navbar/IntlDropdown.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/index.js","navigation/vertical/index.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","@core/layouts/VerticalLayout.js","layouts/VerticalLayout.js","navigation/horizontal/index.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuItems.js","@core/layouts/components/menu/horizontal-menu/index.js","@core/layouts/HorizontalLayout.js","layouts/HorizontalLayout.js","router/Router.js","utility/hooks/useLayout.js","utility/hooks/useRouterTransition.js","App.js","utility/Utils.js","@core/components/avatar/index.js","redux/actions/layout/index.js","utility/hooks/useSkin.js","utility/hooks/useRTL.js"],"names":["AbilityContext","createContext","createContextualCan","Consumer","LayoutWrapper","props","layout","children","appLayout","wrapperClass","transition","routeMeta","dispatch","useDispatch","store","useSelector","state","navbarStore","navbar","contentWidth","Tag","Fragment","useEffect","handleContentWidth","menuCollapsed","handleMenuCollapsed","menuHidden","handleMenuHidden","className","classnames","query","length","Routes","path","component","lazy","meta","authRoute","BlankLayout","useSkin","useState","isMounted","setIsMounted","Customizer","skin","setSkin","isRtl","setIsRtl","setLayout","navbarType","setNavbarType","footerType","setFooterType","navbarColor","setNavbarColor","isHidden","setIsHidden","setContentWidth","setMenuCollapsed","setTransition","openCustomizer","setOpenCustomizer","handleToggle","e","preventDefault","transitionOptions","value","label","transitionValue","find","i","open","href","onClick","size","FormGroup","skinsArr","name","checked","map","radio","index","marginCondition","CustomInput","type","id","onChange","renderSkinsRadio","theme","selectThemeColors","classNamePrefix","defaultValue","options","isClearable","color","selected","border","navbarTypeArr","renderNavbarTypeRadio","footerTypeArr","renderFooterTypeRadio","Footer","Date","getFullYear","target","rel","loginEndpoint","registerEndpoint","refreshEndpoint","logoutEndpoint","tokenType","storageTokenKeyName","storageRefreshTokenKeyName","jwt","jwtOverrideConfig","jwtConfig","jwtDefaultConfig","isAlreadyFetchingAccessToken","subscribers","this","axios","interceptors","request","use","config","accessToken","getToken","headers","Authorization","error","Promise","reject","response","originalRequest","status","refreshToken","then","r","setToken","data","setRefreshToken","onAccessTokenFetched","resolve","addSubscriber","filter","callback","push","localStorage","getItem","setItem","args","post","getRefreshToken","UserDropdown","userData","setUserData","isUserLoggedIn","JSON","parse","userAvatar","defaultAvatar","UncontrolledDropdown","tag","DropdownToggle","role","img","imgHeight","imgWidth","DropdownMenu","right","DropdownItem","Link","to","NotificationDropdown","notificationsArray","avatarContent","subtitle","title","Media","heading","avatarIcon","Badge","pill","header","wheelPropagation","item","switch","left","content","icon","body","Context","messagesEn","userMessagesEn","messagesDe","userMessagesDe","messagesFr","userMessagesFr","messagesPt","userMessagesPt","IntlDropdown","intlContext","useContext","IntlContext","console","log","countryCode","svg","NavbarUser","setMenuVisibility","ThemeToggler","NavItem","NavLink","ThemeNavbar","navLink","VerticalMenuHeader","setGroupOpen","menuHover","Toggler","data-tour","src","themeConfig","app","appLogoImage","alt","appName","isNavLinkActive","link","currentURL","routerProps","isNavGroupActive","some","child","search","navigation","result","getAllParents","obj","match","res","recurse","current","key","undefined","VerticalNavMenuLink","setGroupActive","groupActive","activeItem","setActiveItem","groupOpen","toggleActiveGroup","parentItem","currentActiveItem","LinkTag","externalLink","location","useLocation","pathname","matchPath","exact","strict","arr","parents","searchParents","disabled","active","newTab","isActive","url","resetActiveGroup","badge","badgeText","VerticalNavMenuGroup","allParents","activeArr","includes","splice","indexOf","openArr","val","onCollapseClick","pop","toggleOpenGroup","Collapse","isOpen","VerticalNavMenuItems","items","VerticalNavMenuSectionHeader","VerticalMenuNavItems","Components","TagName","resolveNavItemComponent","Sidebar","menu","setMenuHover","shadowRef","useRef","expanded","onMouseEnter","onMouseLeave","ref","onScrollY","container","scrollTop","classList","contains","add","remove","scrollMenu","useNavbarType","valueToStore","Function","useFooterType","footer","useNavbarColor","backgroundColor","VerticalLayout","useRTL","menuVisibility","window","innerWidth","windowWidth","setWindowWidth","layoutStore","handleWindowWidth","addEventListener","bgColorCondition","floating","sticky","static","hidden","Navbar","expand","light","dark","show","customizer","showUnder","style","bottom","Button","HorizontalNavMenuLink","setOpenDropdown","isChild","HorizontalNavMenuGroup","submenu","openDropdown","menuModifiers","setMaxHeight","enabled","fn","stylesObj","pageHeight","innerHeight","ddTop","instance","reference","getBoundingClientRect","top","popper","height","maxHeight","overflowY","ddRef","width","closest","styles","Dropdown","toggle","modifiers","HorizontalNavMenuItems","HorizontalMenu","HorizontalLayout","navbarScrolled","setNavbarScrolled","pageYOffset","footerClasses","navbarClasses","Router","lastLayout","setLastLayout","handleLayout","useLayout","routerTransition","useRouterTransition","DefaultLayout","Layouts","NotAuthorized","Error","basename","process","render","Object","keys","LayoutTag","LayoutRoutes","LayoutPaths","route","LayoutRoutesAndPaths","assign","fallback","App","colors","primary25","primary","neutral10","neutral20","neutral30","Avatar","forwardRef","imgClassName","initials","badgeUp","badgeColor","contentStyles","rest","str","results","split","forEach","join","getInitials","defaultProps","handleRTL","element","document","bordered","stringify","isRTL","getElementsByTagName","setAttribute"],"mappings":"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","file":"static/js/8.2e5cacb8.chunk.js","sourcesContent":["// ** Imports createContext function\nimport { createContext } from 'react'\n\n// ** Imports createContextualCan function\nimport { createContextualCan } from '@casl/react'\n\n// ** Create Context\nexport const AbilityContext = createContext()\n\n// ** Init Can Context\nexport const Can = createContextualCan(AbilityContext.Consumer)\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleContentWidth, handleMenuCollapsed, handleMenuHidden } from '@store/actions/layout'\n\n// ** Styles\nimport 'animate.css/animate.css'\n\nconst LayoutWrapper = props => {\n  // ** Props\n  const { layout, children, appLayout, wrapperClass, transition, routeMeta } = props\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state)\n  const navbarStore = store.navbar\n  const contentWidth = store.layout.contentWidth\n\n  //** Vars\n  const Tag = layout === 'HorizontalLayout' && !appLayout ? 'div' : Fragment\n\n  // ** Clean Up Function\n  const cleanUp = () => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth('full'))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(!routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(!routeMeta.menuHidden))\n      }\n    }\n  }\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth(routeMeta.contentWidth))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\n      }\n    }\n    return () => cleanUp()\n  }, [])\n\n  return (\n    <div\n      className={classnames('app-content content overflow-hidden', {\n        [wrapperClass]: wrapperClass,\n        'show-overlay': navbarStore.query.length\n      })}\n    >\n      <div className='content-overlay'></div>\n      <div className='header-navbar-shadow' />\n      <div\n        className={classnames({\n          'content-wrapper': !appLayout,\n          'content-area-wrapper': appLayout,\n          'container p-0': contentWidth === 'boxed',\n          [`animate__animated animate__${transition}`]: transition !== 'none' && transition.length\n        })}\n      >\n        <Tag\n          /*eslint-disable */\n          {...(layout === 'HorizontalLayout' && !appLayout\n            ? { className: classnames({ 'content-body': !appLayout }) }\n            : {})}\n          /*eslint-enable */\n        >\n          {children}\n        </Tag>\n      </div>\n    </div>\n  )\n}\n\nexport default LayoutWrapper\n","import { lazy } from 'react'\n\n// ** Document title\nconst TemplateTitle = '%s - Bidoya'\n\n// ** Default Route\nconst DefaultRoute = '/Rfq7/rfqN'\n\n// ** Merge Routes\nconst Routes = [\n  {\n    path: '/Rfq7/rfqN',\n    component: lazy(() => import('../../views/Rfq7/rfqN'))\n  },\n  {\n    path: '/topbar',\n    component: lazy(() => import('../../views/Rfq7/topbar'))\n  },\n  {\n    path: '/serach-grid',\n    component: lazy(() => import('../../views/Rfq7/searchGrid.js'))\n  },\n  {\n    path: '/create-cart',\n    component: lazy(() => import('../../views/Rfq7/createCart.js'))\n  },\n  {\n    path: '/login',\n    component: lazy(() => import('../../views/Login')),\n    layout: 'BlankLayout',\n    meta: {\n      authRoute: true\n    }\n  },\n  {\n    path: '/error',\n    component: lazy(() => import('../../views/Error')),\n    layout: 'BlankLayout'\n  }\n]\n\nexport { DefaultRoute, TemplateTitle, Routes }\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Custom Hooks\nimport { useSkin } from '@hooks/useSkin'\n\nconst BlankLayout = ({ children, ...rest }) => {\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div className='blank-page'>\n      <div className='app-content content'>\n        <div className='content-wrapper'>\n          <div className='content-body'>{children}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BlankLayout\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport classnames from 'classnames'\nimport { Settings, X } from 'react-feather'\nimport { CustomInput, FormGroup } from 'reactstrap'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { selectThemeColors } from '@utils'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nconst Customizer = props => {\n  // ** Props\n  const {\n    skin,\n    setSkin,\n    isRtl,\n    setIsRtl,\n    layout,\n    setLayout,\n    navbarType,\n    setNavbarType,\n    footerType,\n    setFooterType,\n    navbarColor,\n    setNavbarColor,\n    isHidden,\n    setIsHidden,\n    contentWidth,\n    setContentWidth,\n    menuCollapsed,\n    setMenuCollapsed,\n    transition,\n    setTransition\n  } = props\n\n  // ** State\n  const [openCustomizer, setOpenCustomizer] = useState(false)\n\n  // ** Toggles Customizer\n  const handleToggle = e => {\n    e.preventDefault()\n    setOpenCustomizer(!openCustomizer)\n  }\n\n  // ** Render Layout Skin Options\n  const renderSkinsRadio = () => {\n    const skinsArr = [\n      {\n        name: 'light',\n        label: 'Light',\n        checked: skin === 'light'\n      },\n      {\n        name: 'bordered',\n        label: 'Bordered',\n        checked: skin === 'bordered'\n      },\n      {\n        name: 'dark',\n        label: 'Dark',\n        checked: skin === 'dark'\n      },\n      {\n        name: 'semi-dark',\n        label: 'Semi Dark',\n        checked: skin === 'semi-dark'\n      }\n    ]\n\n    return skinsArr.map((radio, index) => {\n      const marginCondition = index !== skinsArr.length - 1\n\n      if (layout === 'HorizontalLayout' && radio.name === 'semi-dark') {\n        return null\n      }\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={radio.name}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setSkin(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // ** Render Navbar Colors Options\n  const renderNavbarColors = () => {\n    const colorsArr = ['white', 'primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark']\n\n    return colorsArr.map(color => (\n      <li\n        key={color}\n        className={classnames(`color-box bg-${color}`, {\n          selected: navbarColor === color,\n          border: color === 'white'\n        })}\n        onClick={() => setNavbarColor(color)}\n      ></li>\n    ))\n  }\n\n  // ** Render Navbar Type Options\n  const renderNavbarTypeRadio = () => {\n    const navbarTypeArr = [\n      {\n        name: 'floating',\n        label: 'Floating',\n        checked: navbarType === 'floating'\n      },\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: navbarType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: navbarType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: navbarType === 'hidden'\n      }\n    ]\n\n    return navbarTypeArr.map((radio, index) => {\n      const marginCondition = index !== navbarTypeArr.length - 1\n\n      if (layout === 'HorizontalLayout' && radio.name === 'hidden') {\n        return null\n      }\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={radio.name}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setNavbarType(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // ** Render Footer Type Options\n  const renderFooterTypeRadio = () => {\n    const footerTypeArr = [\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: footerType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: footerType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: footerType === 'hidden'\n      }\n    ]\n\n    return footerTypeArr.map((radio, index) => {\n      const marginCondition = index !== footerTypeArr.length - 1\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={`footer-${radio.name}`}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setFooterType(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // **  Router Transition Options\n  const transitionOptions = [\n    { value: 'fadeIn', label: 'Fade' },\n    { value: 'fadeInLeft', label: 'Fade In Left' },\n    { value: 'zoomIn', label: 'Zoom In' },\n    { value: 'none', label: 'None' }\n  ]\n\n  // ** Get Current Transition\n  const transitionValue = transitionOptions.find(i => i.value === transition)\n\n  return (\n    <div\n      className={classnames('customizer d-none d-md-block', {\n        open: openCustomizer\n      })}\n    >\n      <a href='/' className='customizer-toggle d-flex align-items-center justify-content-center' onClick={handleToggle}>\n        <Settings size={14} className='spinner' />\n      </a>\n      <PerfectScrollbar className='customizer-content'>\n        <div className='customizer-header px-2 pt-1 pb-0 position-relative'>\n          <h4 className='mb-0'>Theme Customizer</h4>\n          <p className='m-0'>Customize & Preview in Real Time</p>\n          <a href='/' className='customizer-close' onClick={handleToggle}>\n            <X />\n          </a>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Skin</p>\n            <div className='d-flex'>{renderSkinsRadio()}</div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Content Width</p>\n            <div className='d-flex'>\n              <CustomInput\n                type='radio'\n                id='full-width'\n                className='mr-1'\n                label='Full Width'\n                checked={contentWidth === 'full'}\n                onChange={() => setContentWidth('full')}\n              />\n              <CustomInput\n                type='radio'\n                id='boxes'\n                label='Boxed'\n                checked={contentWidth === 'boxed'}\n                onChange={() => setContentWidth('boxed')}\n              />\n            </div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex'>\n              <p className='font-weight-bold mr-auto mb-0'>RTL</p>\n              <CustomInput type='switch' id='rtl' name='RTL' checked={isRtl} onChange={() => setIsRtl(!isRtl)} />\n            </div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex justify-content-between align-items-center'>\n              <p className='font-weight-bold mb-0'>Router Transition</p>\n              <Select\n                theme={selectThemeColors}\n                className='react-select'\n                classNamePrefix='select'\n                defaultValue={transitionOptions[0]}\n                value={transitionValue}\n                options={transitionOptions}\n                isClearable={false}\n                onChange={({ value }) => setTransition(value)}\n              />\n            </div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <p className='font-weight-bold'>Menu Layout</p>\n          <FormGroup className='mb-2'>\n            <div className='d-flex align-items-center'>\n              <CustomInput\n                type='radio'\n                id='vertical-layout'\n                label='Vertical'\n                checked={layout === 'VerticalLayout'}\n                onChange={() => setLayout('vertical')}\n                className='mr-1'\n              />\n              <CustomInput\n                type='radio'\n                id='horizontal-layout'\n                label='Horizontal'\n                checked={layout === 'HorizontalLayout'}\n                onChange={() => setLayout('horizontal')}\n              />\n            </div>\n          </FormGroup>\n          {layout !== 'HorizontalLayout' ? (\n            <FormGroup className='mb-2'>\n              <div className='d-flex align-items-center'>\n                <p className='font-weight-bold mr-auto mb-0'>Menu Collapsed</p>\n                <CustomInput\n                  type='switch'\n                  id='menu-collapsed'\n                  name='menu-collapsed'\n                  checked={menuCollapsed}\n                  onChange={() => setMenuCollapsed(!menuCollapsed)}\n                />\n              </div>\n            </FormGroup>\n          ) : null}\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex align-items-center'>\n              <p className='font-weight-bold mr-auto mb-0'>Menu Hidden</p>\n              <CustomInput\n                type='switch'\n                id='menu-hidden'\n                name='menu-hidden'\n                checked={isHidden}\n                onChange={() => setIsHidden(!isHidden)}\n              />\n            </div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          {layout !== 'HorizontalLayout' ? (\n            <FormGroup className='mb-2'>\n              <p className='font-weight-bold'>Navbar Color</p>\n              <ul className='list-inline unstyled-list'>{renderNavbarColors()}</ul>\n            </FormGroup>\n          ) : null}\n\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>{layout === 'HorizontalLayout' ? 'Menu' : 'Navbar'} Type</p>\n            <div className='d-flex'>{renderNavbarTypeRadio()}</div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Footer Type</p>\n            <div className='d-flex'>{renderFooterTypeRadio()}</div>\n          </FormGroup>\n        </div>\n      </PerfectScrollbar>\n    </div>\n  )\n}\n\nexport default Customizer\n","// ** Icons Import\nimport { Heart } from 'react-feather'\n\nconst Footer = () => {\n  return (\n    <p className='clearfix mb-0'>\n      <span className='float-md-left d-block d-md-inline-block mt-25'>\n        COPYRIGHT © {new Date().getFullYear()}{' '}\n        <a href='https://1.envato.market/pixinvent_portfolio' target='_blank' rel='noopener noreferrer'>\n          Pixinvent\n        </a>\n        <span className='d-none d-sm-inline-block'>, All rights Reserved</span>\n      </span>\n      <span className='float-md-right d-none d-md-block'>\n        Hand-crafted & Made with\n        <Heart size={14} />\n      </span>\n    </p>\n  )\n}\n\nexport default Footer\n","// ** Auth Endpoints\nexport default {\n  loginEndpoint: '/jwt/login',\n  registerEndpoint: '/jwt/register',\n  refreshEndpoint: '/jwt/refresh-token',\n  logoutEndpoint: '/jwt/logout',\n\n  // ** This will be prefixed in authorization header with token\n  // ? e.g. Authorization: Bearer <token>\n  tokenType: 'Bearer',\n\n  // ** Value of this property will be used as key to store JWT token in storage\n  storageTokenKeyName: 'accessToken',\n  storageRefreshTokenKeyName: 'refreshToken'\n}\n","// ** JWT Service Import\nimport JwtService from './jwtService'\n\n// ** Export Service as useJwt\nexport default function useJwt(jwtOverrideConfig) {\n  const jwt = new JwtService(jwtOverrideConfig)\n\n  return {\n    jwt\n  }\n}\n","import axios from 'axios'\nimport jwtDefaultConfig from './jwtDefaultConfig'\n\nexport default class JwtService {\n  // ** jwtConfig <= Will be used by this service\n  jwtConfig = { ...jwtDefaultConfig }\n\n  // ** For Refreshing Token\n  isAlreadyFetchingAccessToken = false\n\n  // ** For Refreshing Token\n  subscribers = []\n\n  constructor(jwtOverrideConfig) {\n    this.jwtConfig = { ...this.jwtConfig, ...jwtOverrideConfig }\n\n    // ** Request Interceptor\n    axios.interceptors.request.use(\n      config => {\n        // ** Get token from localStorage\n        const accessToken = this.getToken()\n\n        // ** If token is present add it to request's Authorization Header\n        if (accessToken) {\n          // ** eslint-disable-next-line no-param-reassign\n          config.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\n        }\n        return config\n      },\n      error => Promise.reject(error)\n    )\n\n    // ** Add request/response interceptor\n    axios.interceptors.response.use(\n      response => response,\n      error => {\n        // ** const { config, response: { status } } = error\n        const { config, response } = error\n        const originalRequest = config\n\n        // ** if (status === 401) {\n        if (response && response.status === 401) {\n          if (!this.isAlreadyFetchingAccessToken) {\n            this.isAlreadyFetchingAccessToken = true\n            this.refreshToken().then(r => {\n              this.isAlreadyFetchingAccessToken = false\n\n              // ** Update accessToken in localStorage\n              this.setToken(r.data.accessToken)\n              this.setRefreshToken(r.data.refreshToken)\n\n              this.onAccessTokenFetched(r.data.accessToken)\n            })\n          }\n          const retryOriginalRequest = new Promise(resolve => {\n            this.addSubscriber(accessToken => {\n              // ** Make sure to assign accessToken according to your response.\n              // ** Check: https://pixinvent.ticksy.com/ticket/2413870\n              // ** Change Authorization header\n              originalRequest.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\n              resolve(this.axios(originalRequest))\n            })\n          })\n          return retryOriginalRequest\n        }\n        return Promise.reject(error)\n      }\n    )\n  }\n\n  onAccessTokenFetched(accessToken) {\n    this.subscribers = this.subscribers.filter(callback => callback(accessToken))\n  }\n\n  addSubscriber(callback) {\n    this.subscribers.push(callback)\n  }\n\n  getToken() {\n    return localStorage.getItem(this.jwtConfig.storageTokenKeyName)\n  }\n\n  getRefreshToken() {\n    return localStorage.getItem(this.jwtConfig.storageRefreshTokenKeyName)\n  }\n\n  setToken(value) {\n    localStorage.setItem(this.jwtConfig.storageTokenKeyName, value)\n  }\n\n  setRefreshToken(value) {\n    localStorage.setItem(this.jwtConfig.storageRefreshTokenKeyName, value)\n  }\n\n  login(...args) {\n    return axios.post(this.jwtConfig.loginEndpoint, ...args)\n  }\n\n  register(...args) {\n    return axios.post(this.jwtConfig.registerEndpoint, ...args)\n  }\n\n  refreshToken() {\n    return axios.post(this.jwtConfig.refreshEndpoint, {\n      refreshToken: this.getRefreshToken()\n    })\n  }\n}\n","// ** Core JWT Import\nimport useJwt from '@src/@core/auth/jwt/useJwt'\n\nconst { jwt } = useJwt({})\n\nexport default jwt\n","// ** UseJWT import to get config\nimport useJwt from '@src/auth/jwt/useJwt'\n\nconst config = useJwt.jwtConfig\n\n// ** Handle User Login\nexport const handleLogin = data => {\n  return dispatch => {\n    dispatch({\n      type: 'LOGIN',\n      data,\n      config,\n      [config.storageTokenKeyName]: data[config.storageTokenKeyName],\n      [config.storageRefreshTokenKeyName]: data[config.storageRefreshTokenKeyName]\n    })\n\n    // ** Add to user, accessToken & refreshToken to localStorage\n    localStorage.setItem('userData', JSON.stringify(data))\n    localStorage.setItem(config.storageTokenKeyName, JSON.stringify(data.accessToken))\n    localStorage.setItem(config.storageRefreshTokenKeyName, JSON.stringify(data.refreshToken))\n  }\n}\n\n// ** Handle User Logout\nexport const handleLogout = () => {\n  return dispatch => {\n    dispatch({ type: 'LOGOUT', [config.storageTokenKeyName]: null, [config.storageRefreshTokenKeyName]: null })\n\n    // ** Remove user, accessToken & refreshToken from localStorage\n    localStorage.removeItem('userData')\n    localStorage.removeItem(config.storageTokenKeyName)\n    localStorage.removeItem(config.storageRefreshTokenKeyName)\n  }\n}\n","export default __webpack_public_path__ + \"static/media/raviKukreja.7af3d847.jpg\";","// ** React Imports\nimport { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Utils\nimport { isUserLoggedIn } from '@utils'\n\n// ** Store & Actions\nimport { useDispatch } from 'react-redux'\nimport { handleLogout } from '@store/actions/auth'\n\n// ** Third Party Components\nimport { UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap'\nimport { User, Mail, LogOut, CheckSquare, MessageSquare, Bell, Settings, CreditCard, HelpCircle, Power } from 'react-feather'\n\n// ** Default Avatar Image\nimport defaultAvatar from '@src/assets/images/avatars/raviKukreja.jpg'\n\nconst UserDropdown = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n\n  // ** State\n  const [userData, setUserData] = useState(null)\n\n  //** ComponentDidMount\n  useEffect(() => {\n    if (isUserLoggedIn() !== null) {\n      setUserData(JSON.parse(localStorage.getItem('userData')))\n    }\n  }, [])\n\n  //** Vars\n  //const userAvatar = (userData && userData.avatar) || defaultAvatar\n  const userAvatar = defaultAvatar\n\n  return (\n    <UncontrolledDropdown tag='li' className='dropdown-user nav-item'>\n      <DropdownToggle href='/' tag='a' className='nav-link dropdown-user-link' onClick={e => e.preventDefault()}>\n        <div className='user-nav d-sm-flex d-none'>\n          <span className='user-name font-weight-bold'> Ravi Kukreja</span> \n          {/* {(userData && userData['username']) || 'Ravi Kukreja'} */}\n          <span className='user-status'> {(userData && userData.role) || 'Super Admin'}</span>\n        </div>\n        <Avatar img={userAvatar} imgHeight='40' imgWidth='40' status='online' />\n      </DropdownToggle>\n      <DropdownMenu right>\n        \n        <DropdownItem tag={Link} to='/PReviewsle'>\n              <User size={14} className='mr-75' />\n              <span className='align-middle'>Profile</span>\n        </DropdownItem>\n        \n        <DropdownItem tag={Link} to='#'>\n          <Bell size={14} className='mr-75' />\n          <span className='align-middle'>Notification</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='#'>\n          <CheckSquare size={14} className='mr-75' />\n          <span className='align-middle'>Report</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='#'>\n          <MessageSquare size={14} className='mr-75' />\n          <span className='align-middle'>Status</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='#'>\n          <LogOut size={14} className='mr-75' />\n          <span className='align-middle'>Logout</span>\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  )\n}\n\nexport default UserDropdown\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { Bell, X, Check, AlertTriangle } from 'react-feather'\nimport {\n  Button,\n  Badge,\n  Media,\n  CustomInput,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst NotificationDropdown = () => {\n  // ** Notification Array\n  const notificationsArray = [\n    {\n      //img: require('@src/assets/images/portrait/small/avatar-s-15.jpg').default,\n      avatarContent: 'TT',\n      color: 'light-success',\n      subtitle: 'Won the monthly best seller badge.',\n      title: (\n        <Media tag='p' heading>\n          <span className='font-weight-bolder'>Congratulation Ravi</span>winner!\n        </Media>\n      )\n    },\n    {\n      //img: require('@src/assets/images/portrait/small/avatar-s-3.jpg').default,\n      avatarContent: 'SN',\n      color: 'light-success',\n      subtitle: 'You have 10 unread messages.',\n      title: (\n        <Media tag='p' heading>\n          <span className='font-weight-bolder'>New message</span>&nbsp;received\n        </Media>\n      )\n    },\n    {\n      avatarContent: 'MD',\n      color: 'light-danger',\n      subtitle: 'MD Inc. order updated',\n      title: (\n        <Media tag='p' heading>\n          <span className='font-weight-bolder'>New Orders</span>&nbsp;checkout\n        </Media>\n      )\n    },\n    {\n      avatarIcon: <X size={14} />,\n      color: 'light-danger',\n      subtitle: 'USA Server is down due to hight CPU usage',\n      title: (\n        <Media tag='p' heading>\n          <span className='font-weight-bolder'>Server down</span>&nbsp;registered\n        </Media>\n      )\n    },\n    {\n      avatarIcon: <Check size={14} />,\n      color: 'light-success',\n      subtitle: 'Last month sales report generated',\n      title: (\n        <Media tag='p' heading>\n          <span className='font-weight-bolder'>Sales report</span>&nbsp;generated\n        </Media>\n      )\n    },\n    {\n      avatarIcon: <AlertTriangle size={14} />,\n      color: 'light-warning',\n      subtitle: 'You Missed This awasome Offer',\n      title: (\n        <Media tag='p' heading>\n          <span className='font-weight-bolder'>Offer Missed</span>&nbsp;usage\n        </Media>\n      )\n    }\n  ]\n\n  // ** Function to render Notifications\n  /*eslint-disable */\n  const renderNotificationItems = () => {\n    return (\n      <PerfectScrollbar\n        component='li'\n        className='media-list scrollable-container'\n        options={{\n          wheelPropagation: false\n        }}\n      >\n        {notificationsArray.map((item, index) => {\n          return (\n            <a key={index} className='d-flex' href='/' onClick={e => e.preventDefault()}>\n              <Media\n                className={classnames('d-flex', {\n                  'align-items-start': !item.switch,\n                  'align-items-center': item.switch\n                })}\n              >\n                {!item.switch ? (\n                  <Fragment>\n                    <Media left>\n                      <Avatar\n                        {...(item.img\n                          ? { img: item.img, imgHeight: 32, imgWidth: 32 }\n                          : item.avatarContent\n                          ? {\n                              content: item.avatarContent,\n                              color: item.color\n                            }\n                          : item.avatarIcon\n                          ? {\n                              icon: item.avatarIcon,\n                              color: item.color\n                            }\n                          : null)}\n                      />\n                    </Media>\n                    <Media body>\n                      {item.title}\n                      <small className='notification-text'>{item.subtitle}</small>\n                    </Media>\n                  </Fragment>\n                ) : (\n                  <Fragment>\n                    {item.title}\n                    {item.switch}\n                  </Fragment>\n                )}\n              </Media>\n            </a>\n          )\n        })}\n      </PerfectScrollbar>\n    )\n  }\n  /*eslint-enable */\n\n  return (\n    <UncontrolledDropdown tag='li' className='dropdown-notification nav-item mr-25'>\n      <DropdownToggle tag='a' className='nav-link' href='/' onClick={e => e.preventDefault()}>\n        <Bell size={21} />\n        <Badge pill color='danger' className='badge-up'>\n          5\n        </Badge>\n      </DropdownToggle>\n      <DropdownMenu tag='ul' right className='dropdown-menu-media mt-0'>\n        <li className='dropdown-menu-header'>\n          <DropdownItem className='d-flex' tag='div' header>\n            <h4 className='notification-title mb-0 mr-auto'>Notifications</h4>\n            <Badge tag='div' color='light-primary' pill>\n              6 New\n            </Badge>\n          </DropdownItem>\n        </li>\n        {renderNotificationItems()}\n        {/* <li className='dropdown-menu-footer'>\n                  <Button.Ripple color='primary' block>\n                    Read all notifications\n                  </Button.Ripple>\n            </li> */}\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  )\n}\n\nexport default NotificationDropdown\n","// ** React Imports\nimport { useState, createContext } from 'react'\n\n// ** Intl Provider Import\nimport { IntlProvider } from 'react-intl'\n\n// ** Core Language Data\nimport messagesEn from '@assets/data/locales/en.json'\nimport messagesDe from '@assets/data/locales/de.json'\nimport messagesFr from '@assets/data/locales/fr.json'\nimport messagesPt from '@assets/data/locales/pt.json'\n\n// ** User Language Data\nimport userMessagesEn from '@src/assets/data/locales/en.json'\nimport userMessagesDe from '@src/assets/data/locales/de.json'\nimport userMessagesFr from '@src/assets/data/locales/fr.json'\nimport userMessagesPt from '@src/assets/data/locales/pt.json'\n\n// ** Menu msg obj\nconst menuMessages = {\n  en: { ...messagesEn, ...userMessagesEn },\n  de: { ...messagesDe, ...userMessagesDe },\n  fr: { ...messagesFr, ...userMessagesFr },\n  pt: { ...messagesPt, ...userMessagesPt }\n}\n\n// ** Create Context\nconst Context = createContext()\n\nconst IntlProviderWrapper = ({ children }) => {\n  // ** States\n  const [locale, setLocale] = useState('en')\n  const [messages, setMessages] = useState(menuMessages['en'])\n\n  // ** Switches Language\n  const switchLanguage = lang => {\n    setLocale(lang)\n    setMessages(menuMessages[lang])\n  }\n\n  return (\n    <Context.Provider value={{ locale, switchLanguage }}>\n      { console.log(Context) }\n      <IntlProvider key={locale} locale={locale} messages={messages} defaultLocale='en'>\n        {children}\n      </IntlProvider>\n    </Context.Provider>\n  )\n}\n\nexport { IntlProviderWrapper, Context as IntlContext }\n","// ** React Imports\nimport { useContext } from 'react'\n\n// ** Third Party Components\nimport ReactCountryFlag from 'react-country-flag'\nimport { UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\n// ** Internationalization Context\nimport { IntlContext } from '@src/utility/context/Internationalization'\nconst IntlDropdown = () => {\n  // ** Context\n  const intlContext = useContext(IntlContext)\n  console.log(intlContext)\n\n  // ** Vars\n  const langObj = {\n    en: 'English',\n    de: 'German',\n    fr: 'French',\n    pt: 'Portuguese'\n  }\n\n  // ** Function to switch Language\n  const handleLangUpdate = (e, lang) => {\n    e.preventDefault()\n    intlContext.switchLanguage(lang)\n  }\n\n  return (\n    <UncontrolledDropdown href='/' tag='li' className='dropdown-language nav-item'>\n      <DropdownToggle href='/' tag='a' className='nav-link' onClick={e => e.preventDefault()}>\n        <ReactCountryFlag\n          className='country-flag flag-icon'\n          countryCode='us'\n          svg\n        />\n        <span className='selected-language'>English</span>\n      </DropdownToggle>\n    </UncontrolledDropdown>\n  )\n}\n\nexport default IntlDropdown\n","// ** Dropdowns Imports\nimport { Fragment } from 'react'\n\nimport UserDropdown from './UserDropdown'\nimport NotificationDropdown from './NotificationDropdown'\nimport IntlDropdown from './IntlDropdown'\n//import NavbarSearch from './NavbarSearch'\n// ** Third Party Components\nimport { Sun, Moon, Menu } from 'react-feather'\nimport { NavItem, NavLink } from 'reactstrap'\n\nconst NavbarUser = props => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  // ** Function to toggle Theme (Light/Dark)\n  const ThemeToggler = () => {\n    if (skin === 'dark') {\n      return <Sun className='ficon' onClick={() => setSkin('light')} />\n    } else {\n      return <Moon className='ficon' onClick={() => setSkin('dark')} />\n    }\n  }\n\n  return (\n    <Fragment>\n      <ul className='navbar-nav d-xl-none d-flex align-items-center'>\n        <NavItem className='mobile-menu mr-auto'>\n          <NavLink className='nav-menu-main menu-toggle hidden-xs is-active' onClick={() => setMenuVisibility(true)}>\n            <Menu className='ficon' />\n          </NavLink>\n        </NavItem>\n      </ul>\n      <div className='bookmark-wrapper d-flex align-items-center'>\n        <NavItem className='d-none d-lg-block'>\n          <NavLink className='nav-link-style'>\n            <ThemeToggler />\n          </NavLink>\n        </NavItem>\n      </div>\n      <ul className='nav navbar-nav align-items-center ml-auto'>\n         <IntlDropdown />\n        <NotificationDropdown />\n        <UserDropdown />\n      </ul>\n    </Fragment>\n  )\n}\nexport default NavbarUser\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport NavbarUser from './NavbarUser'\n\nconst ThemeNavbar = props => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  return (\n    <Fragment>\n      <NavbarUser skin={skin} setSkin={setSkin} setMenuVisibility={setMenuVisibility} />\n    </Fragment>\n  )\n}\n\nexport default ThemeNavbar\n","import { Mail, User, BarChart2, Bell, Home, Globe, LogOut, DollerSign, Share, Codesandbox, AtSign, Flag, Circle, DollarSign, Database, Grid, FileText, Book, Clipboard } from 'react-feather'\n\nexport default [\n  {\n        id: 'RFQ_Nigotiation',\n        title: 'RFQ Nigotiation',\n        icon: <Circle size={20} />,\n        navLink: '/Rfq7/rfqN'\n  }\n]\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\n\n// ** Third Party Components\nimport { Disc, X, Circle } from 'react-feather'\n\n// ** Config\nimport themeConfig from '@configs/themeConfig'\n\nconst VerticalMenuHeader = props => {\n  // ** Props\n  const { menuCollapsed, setMenuCollapsed, setMenuVisibility, setGroupOpen, menuHover } = props\n\n  // ** Reset open group\n  useEffect(() => {\n    if (!menuHover && menuCollapsed) setGroupOpen([])\n  }, [menuHover, menuCollapsed])\n\n  // ** Menu toggler component\n  const Toggler = () => {\n    if (!menuCollapsed) {\n      return (\n        <Disc\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(true)}\n        />\n      )\n    } else {\n      return (\n        <Circle\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(false)}\n        />\n      )\n    }\n  }\n\n  return (\n    <div className='navbar-header'>\n      <ul className='nav navbar-nav flex-row'>\n        <li className='nav-item mr-auto'>\n          <NavLink to='/' className='navbar-brand'>\n            <span className='brand-logo'>\n              <img src={themeConfig.app.appLogoImage} alt='logo' />\n            </span>\n            <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n          </NavLink>\n        </li>\n        <li className='nav-item nav-toggle'>\n          <div className='nav-link modern-nav-toggle cursor-pointer'>\n            <Toggler />\n            <X onClick={() => setMenuVisibility(false)} className='toggle-icon icon-x d-block d-xl-none' size={20} />\n          </div>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default VerticalMenuHeader\n","// ** React Imports\nimport { useContext } from 'react'\nimport { AbilityContext } from '@src/utility/context/Can'\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveVerticalNavMenuItemComponent = item => {\n  if (item.header) return 'VerticalNavMenuSectionHeader'\n  if (item.children) return 'VerticalNavMenuGroup'\n  return 'VerticalNavMenuLink'\n}\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveHorizontalNavMenuItemComponent = item => {\n  if (item.children) return 'HorizontalNavMenuGroup'\n  return 'HorizontalNavMenuLink'\n}\n\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\n// export const isNavLinkActive = (link, currentURL, match) => {\n//   // return currentURL === link || (URLParams && Object.keys(URLParams).length && currentURLFilter === item.navLink)\n//   const getFirstObjProp = obj => obj[Object.keys(obj)[0]]\n//   return (\n//     currentURL === link ||\n//     (match !== null && match !== undefined && match.url === `${link}/${getFirstObjProp(match.params)}`)\n//   )\n// }\n\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\n  return (\n    currentURL === link ||\n    (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\n  )\n  // return currentURL === link\n}\n\n/**\n * Check if nav group is\n * @param {Array} children Group children\n */\n// export const isNavGroupActive = (children, currentURL, match) => {\n//   return children.some(child => {\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children) {\n//       return isNavGroupActive(child.children, currentURL, match)\n//     }\n//     // else it's link => Check for matched Route\n//     return isNavLinkActive(child.navLink, currentURL, match)\n//   })\n// }\nexport const isNavGroupActive = (children, currentURL, routerProps) => {\n  return children.some(child => {\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children) {\n      return isNavGroupActive(child.children, currentURL, routerProps)\n    }\n    // else it's link => Check for matched Route\n    return isNavLinkActive(child.navLink, currentURL, routerProps)\n  })\n}\n\n/**\n * Search for parent object\n * @param {Array} navigation Group children\n * @param {string} currentURL current URL\n */\n// export const search = (navigation, currentURL, match) => {\n//   let result\n//   navigation.some(child => {\n//     let children\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children && (children = search(child.children, currentURL, match))) {\n//       return (result = {\n//         id: child.id,\n//         children\n//       })\n//     }\n\n//     // else it's link => Check for matched Route\n//     if (isNavLinkActive(child.navLink, currentURL, match)) {\n//       return (result = {\n//         id: child.id\n//       })\n//     }\n//   })\n//   return result\n// }\n\nexport const search = (navigation, currentURL, routerProps) => {\n  let result\n  navigation.some(child => {\n    let children\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children && (children = search(child.children, currentURL, routerProps))) {\n      return (result = {\n        id: child.id,\n        children\n      })\n    }\n\n    // else it's link => Check for matched Route\n    if (isNavLinkActive(child.navLink, currentURL, routerProps)) {\n      return (result = {\n        id: child.id\n      })\n    }\n  })\n  return result\n}\n\n/**\n * Loop through nested object\n * @param {object} obj nested object\n */\nexport const getAllParents = (obj, match) => {\n  const res = []\n  const recurse = (obj, current) => {\n    for (const key in obj) {\n      const value = obj[key]\n      if (value !== undefined) {\n        if (value && typeof value === 'object') {\n          recurse(value, key)\n        } else {\n          if (key === match) {\n            res.push(value)\n          }\n        }\n      }\n    }\n  }\n  recurse(obj)\n  return res\n}\n\nexport const canViewMenuGroup = item => {\n  const ability = useContext(AbilityContext)\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n  const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\n\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\n  if (!(item.action && item.resource)) {\n    return hasAnyVisibleChild\n  }\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\n}\n\nexport const canViewMenuItem = item => {\n  const ability = useContext(AbilityContext)\n  return ability.can(item.action, item.resource)\n}\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink, useLocation, matchPath, useParams } from 'react-router-dom'\n\n// ** Third Party Components\nimport { Badge } from 'reactstrap'\nimport classnames from 'classnames'\n\n// ** Vertical Menu Array Of Items\nimport navigation from '@src/navigation/vertical'\n\n// ** Utils\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\n\nconst VerticalNavMenuLink = ({\n  item,\n  groupActive,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  groupOpen,\n  setGroupOpen,\n  toggleActiveGroup,\n  parentItem,\n  routerProps,\n  currentActiveItem\n}) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** URL Vars\n  const location = useLocation()\n  const currentURL = location.pathname\n\n  // ** To match path\n  const match = matchPath(currentURL, {\n    path: `${item.navLink}/:param`,\n    exact: true,\n    strict: false\n  })\n\n  // ** Search for current item parents\n  const searchParents = (navigation, currentURL) => {\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\n    return allParents\n  }\n\n  // ** URL Vars\n  const resetActiveGroup = navLink => {\n    const parents = search(navigation, navLink, match)\n    toggleActiveGroup(item.id, parents)\n  }\n\n  // ** Reset Active & Open Group Arrays\n  const resetActiveAndOpenGroups = () => {\n    setGroupActive([])\n    setGroupOpen([])\n  }\n\n  // ** Checks url & updates active item\n  useEffect(() => {\n    if (currentActiveItem !== null) {\n      setActiveItem(currentActiveItem)\n      const arr = searchParents(navigation, currentURL)\n      setGroupActive([...arr])\n    }\n  }, [location])\n\n  return (\n    <li\n      className={classnames({\n        'nav-item': !item.children,\n        disabled: item.disabled,\n        active: item.navLink === activeItem\n      })}\n    >\n      <LinkTag\n        className='d-flex align-items-center'\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              isActive: (match, location) => {\n                if (!match) {\n                  return false\n                }\n\n                if (match.url && match.url !== '' && match.url === item.navLink) {\n                  currentActiveItem = item.navLink\n                }\n              }\n            })}\n        /*eslint-enable */\n        onClick={e => {\n          if (!item.navLink.length) {\n            e.preventDefault()\n          }\n          parentItem ? resetActiveGroup(item.navLink) : resetActiveAndOpenGroups()\n        }}\n      >\n        {item.icon}\n        <span className='menu-item text-truncate'>{item.title}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuLink\n","// ** React Imports\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Collapse, Badge } from 'reactstrap'\n\n// ** Vertical Menu Items Component\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\n// ** Utils\nimport { isNavGroupActive, getAllParents } from '@layouts/utils'\n\nconst VerticalNavMenuGroup = ({\n  item,\n  groupActive,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  groupOpen,\n  setGroupOpen,\n  parentItem,\n  menuCollapsed,\n  menuHover,\n  routerProps,\n  currentActiveItem\n}) => {\n  // ** Current Val\n  const currentURL = useLocation().pathname\n\n  // ** Toggles Open Group\n  const toggleOpenGroup = (item, parentItem) => {\n    let openArr = groupOpen\n    let allParents\n\n    if (parentItem) {\n      allParents = getAllParents(parentItem, 'id')\n      allParents.pop()\n    }\n\n    // ** If user clicked on menu group inside already opened group i.g. when user click on blog group inside pages group\n    if (groupOpen && allParents && groupOpen[0] === allParents[0]) {\n      groupOpen.includes(item) ? openArr.splice(openArr.indexOf(item), 1) : openArr.push(item)\n    } else {\n      openArr = []\n      if (!groupOpen.includes(item)) {\n        openArr.push(item)\n      }\n    }\n\n    // ** Set Open Group\n    setGroupOpen([...openArr])\n  }\n\n  // ** Toggle Active Group\n  const toggleActiveGroup = (item, parentItem) => {\n    let activeArr = groupActive\n    let allParents\n\n    if (parentItem) {\n      allParents = getAllParents(parentItem, 'id')\n      activeArr = allParents\n    } else {\n      activeArr.includes(item) ? activeArr.splice(activeArr.indexOf(item), 1) : activeArr.push(item)\n    }\n\n    // ** Set open group removing any activegroup item present in opengroup state\n    const openArr = groupOpen.filter(val => !activeArr.includes(val))\n    setGroupOpen([...openArr])\n\n    // **  Set Active Group\n    setGroupActive([...activeArr])\n  }\n\n  // ** On Group Item Click\n  const onCollapseClick = (e, item) => {\n    if ((groupActive && groupActive.includes(item.id)) || isNavGroupActive(item.children, currentURL, routerProps)) {\n      toggleActiveGroup(item.id)\n    } else {\n      toggleOpenGroup(item.id, parentItem)\n    }\n\n    e.preventDefault()\n  }\n\n  // ** Returns condition to add open class\n  const openClassCondition = id => {\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\n      if (groupActive.includes(id) || groupOpen.includes(item.id)) {\n        return true\n      }\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\n      return false\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <li\n      className={classnames('nav-item has-sub', {\n        open: openClassCondition(item.id),\n        'menu-collapsed-open': groupActive.includes(item.id),\n        'sidebar-group-active': groupActive.includes(item.id) || groupOpen.includes(item.id)\n      })}\n    >\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\n        {item.icon}\n        <span className='menu-title text-truncate'>{item.title}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </Link>\n\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\n      <ul className='menu-content'>\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\n          <VerticalNavMenuItems\n            items={item.children}\n            groupActive={groupActive}\n            setGroupActive={setGroupActive}\n            groupOpen={groupOpen}\n            setGroupOpen={setGroupOpen}\n            toggleActiveGroup={toggleActiveGroup}\n            parentItem={item}\n            menuCollapsed={menuCollapsed}\n            menuHover={menuHover}\n            routerProps={routerProps}\n            currentActiveItem={currentActiveItem}\n            activeItem={activeItem}\n            setActiveItem={setActiveItem}\n          />\n        </Collapse>\n      </ul>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuGroup\n","// ** Third Party Components\nimport { MoreHorizontal } from 'react-feather'\n\nconst VerticalNavMenuSectionHeader = ({ item, index }) => {\n  return (\n    <li className='navigation-header'>\n      <span>{item.header}</span>\n      <MoreHorizontal className='feather-more-horizontal' />\n    </li>\n  )\n}\n\nexport default VerticalNavMenuSectionHeader\n","// ** Vertical Menu Components\nimport VerticalNavMenuLink from './VerticalNavMenuLink'\nimport VerticalNavMenuGroup from './VerticalNavMenuGroup'\nimport VerticalNavMenuSectionHeader from './VerticalNavMenuSectionHeader'\n\n// ** Utils\nimport { resolveVerticalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\n\nconst VerticalMenuNavItems = props => {\n  // ** Components Object\n  const Components = {\n    VerticalNavMenuSectionHeader,\n    VerticalNavMenuGroup,\n    VerticalNavMenuLink\n  }\n\n  // ** Render Nav Menu Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n\n    return <TagName key={item.id || item.header} item={item} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default VerticalMenuNavItems\n","// ** React Imports\nimport { Fragment, useState, useRef } from 'react'\n\n// ** Vertical Menu Items Array\nimport navigation from '@src/navigation/vertical'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Vertical Menu Components\nimport VerticalMenuHeader from './VerticalMenuHeader'\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\nconst Sidebar = props => {\n  // ** Props\n  const { menuCollapsed, routerProps, menu, currentActiveItem, skin } = props\n\n  // ** States\n  const [groupOpen, setGroupOpen] = useState([])\n  const [groupActive, setGroupActive] = useState([])\n  const [activeItem, setActiveItem] = useState(null)\n\n  // ** Menu Hover State\n  const [menuHover, setMenuHover] = useState(false)\n\n  // ** Ref\n  const shadowRef = useRef(null)\n\n  // ** Function to handle Mouse Enter\n  const onMouseEnter = () => {\n    if (menuCollapsed) {\n      setMenuHover(true)\n    }\n  }\n\n  // ** Scroll Menu\n  const scrollMenu = container => {\n    if (shadowRef && container.scrollTop > 0) {\n      if (!shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.add('d-block')\n      }\n    } else {\n      if (shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.remove('d-block')\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={classnames('main-menu menu-fixed menu-accordion menu-shadow', {\n          expanded: menuHover || menuCollapsed === false,\n          'menu-light': skin !== 'semi-dark' && skin !== 'dark',\n          'menu-dark': skin === 'semi-dark' || skin === 'dark'\n        })}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={() => setMenuHover(false)}\n      >\n        {menu ? (\n          menu\n        ) : (\n          <Fragment>\n            {/* Vertical Menu Header */}\n            <VerticalMenuHeader setGroupOpen={setGroupOpen} menuHover={menuHover} {...props} />\n            {/* Vertical Menu Header Shadow */}\n            <div className='shadow-bottom' ref={shadowRef}></div>\n            {/* Perfect Scrollbar */}\n            <PerfectScrollbar\n              className='main-menu-content'\n              options={{ wheelPropagation: false }}\n              onScrollY={container => scrollMenu(container)}\n            >\n              <ul className='navigation navigation-main'>\n                <VerticalNavMenuItems\n                  items={navigation}\n                  groupActive={groupActive}\n                  setGroupActive={setGroupActive}\n                  activeItem={activeItem}\n                  setActiveItem={setActiveItem}\n                  groupOpen={groupOpen}\n                  setGroupOpen={setGroupOpen}\n                  routerProps={routerProps}\n                  menuCollapsed={menuCollapsed}\n                  menuHover={menuHover}\n                  currentActiveItem={currentActiveItem}\n                />\n              </ul>\n            </PerfectScrollbar>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Sidebar\n","//** React Imports\nimport { useState } from 'react'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\nexport const useNavbarType = () => {\n  // ** State\n  const [navbarType, setNavbarType] = useState(() => {\n    try {\n      return themeConfig.layout.navbar.type\n    } catch (error) {\n      // ** If error return initialValue\n      console.log(error)\n      return themeConfig.layout.navbar.type\n    }\n  })\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(navbarType) : value\n\n      // ** Set state\n      setNavbarType(valueToStore)\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  return [navbarType, setValue]\n}\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\nexport const useFooterType = () => {\n  // ** State\n  const [footerType, setFooterType] = useState(() => {\n    try {\n      return themeConfig.layout.footer.type\n    } catch (error) {\n      // ** If error also initialValue\n      console.log(error)\n      return themeConfig.layout.footer.type\n    }\n  })\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(footerType) : value\n\n      // ** Set state\n      setFooterType(valueToStore)\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  return [footerType, setValue]\n}\n","//** React Imports\nimport { useState } from 'react'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\nexport const useNavbarColor = () => {\n  // ** State\n  const [navbarColor, setNavbarColor] = useState(() => {\n    try {\n      return themeConfig.layout.navbar.backgroundColor\n    } catch (error) {\n      // ** If error return initialValue\n      console.log(error)\n      return themeConfig.layout.navbar.backgroundColor\n    }\n  })\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(navbarColor) : value\n\n      // ** Set state\n      setNavbarColor(valueToStore)\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  return [navbarColor, setValue]\n}\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/actions/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\nimport ScrollToTop from 'react-scroll-up'\nimport { Navbar, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\nimport Customizer from '@components/customizer'\nimport FooterComponent from './components/footer'\nimport NavbarComponent from './components/navbar'\nimport SidebarComponent from './components/menu/vertical-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\n\nconst VerticalLayout = props => {\n  // ** Props\n  const { children, navbar, footer, menu, routerProps, currentActiveItem } = props\n\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const [navbarType, setNavbarType] = useNavbarType()\n  const [footerType, setFooterType] = useFooterType()\n  const [navbarColor, setNavbarColor] = useNavbarColor()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [menuVisibility, setMenuVisibility] = useState(false)\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Update Window Width\n  const handleWindowWidth = () => {\n    setWindowWidth(window.innerWidth)\n  }\n\n  // ** Vars\n  const location = useLocation()\n  const contentWidth = layoutStore.contentWidth\n  const menuCollapsed = layoutStore.menuCollapsed\n  const isHidden = layoutStore.menuHidden\n\n  // ** Toggles Menu Collapsed\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  //** This function will detect the Route Change and will hide the menu on menu item click\n  useEffect(() => {\n    if (menuVisibility && windowWidth < 1200) {\n      setMenuVisibility(false)\n    }\n  }, [location])\n\n  //** Sets Window Size & Layout Props\n  useEffect(() => {\n    if (window !== undefined) {\n      window.addEventListener('resize', handleWindowWidth)\n    }\n  }, [windowWidth])\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static',\n    hidden: 'navbar-hidden'\n  }\n\n  const navbarClasses = {\n    floating: 'floating-nav',\n    sticky: 'fixed-top',\n    static: 'navbar-static-top',\n    hidden: 'd-none'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n  return (\n    <div\n      className={classnames(\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\n          footerClasses[footerType] || 'footer-static'\n        }`,\n        {\n          // Modern Menu\n          'vertical-menu-modern': windowWidth >= 1200,\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\n\n          // Overlay Menu\n          'vertical-overlay-menu': windowWidth < 1200,\n          'menu-hide': !menuVisibility && windowWidth < 1200,\n          'menu-open': menuVisibility && windowWidth < 1200\n        }\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      {!isHidden ? (\n        <SidebarComponent\n          skin={skin}\n          menu={menu}\n          menuCollapsed={menuCollapsed}\n          menuVisibility={menuVisibility}\n          setMenuCollapsed={setMenuCollapsed}\n          setMenuVisibility={setMenuVisibility}\n          routerProps={routerProps}\n          currentActiveItem={currentActiveItem}\n        />\n      ) : null}\n\n      <Navbar\n        expand='lg'\n        light={skin !== 'dark'}\n        dark={skin === 'dark' || bgColorCondition}\n        color={bgColorCondition ? navbarColor : undefined}\n        className={classnames(\n          `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`\n        )}\n      >\n        <div className='navbar-container d-flex content'>\n          {navbar ? navbar : <NavbarComponent setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} />}\n        </div>\n      </Navbar>\n      {children}\n\n      {/* Vertical Nav Menu Overlay */}\n      <div\n        className={classnames('sidenav-overlay', {\n          show: menuVisibility\n        })}\n        onClick={() => setMenuVisibility(false)}\n      ></div>\n      {/* Vertical Nav Menu Overlay */}\n\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          setSkin={setSkin}\n          footerType={footerType}\n          setFooterType={setFooterType}\n          navbarType={navbarType}\n          setNavbarType={setNavbarType}\n          navbarColor={navbarColor}\n          setNavbarColor={setNavbarColor}\n          isRtl={isRtl}\n          setIsRtl={setIsRtl}\n          layout={props.layout}\n          setLayout={props.setLayout}\n          isHidden={isHidden}\n          setIsHidden={setIsHidden}\n          contentWidth={contentWidth}\n          setContentWidth={setContentWidth}\n          menuCollapsed={menuCollapsed}\n          setMenuCollapsed={setMenuCollapsed}\n          transition={props.transition}\n          setTransition={props.setTransition}\n          themeConfig={themeConfig}\n        />\n      ) : null}\n      {/* <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\n      </footer> */}\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default VerticalLayout\n","// !Do not remove the Layout import\nimport Layout from '@layouts/VerticalLayout'\n\nconst VerticalLayout = props => <Layout {...props}>{props.children}</Layout>\n\nexport default VerticalLayout\n","import { Mail, Home } from 'react-feather'\n\nexport default [\n  {\n    id: 'home',\n    title: 'Home',\n    icon: <Home size={20} />,\n    navLink: '/home'\n  },\n  {\n    id: 'secondPage',\n    title: 'Second Page',\n    icon: <Mail size={20} />,\n    navLink: '/second-page'\n  }\n]\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\n\n// ** Horizontal menu items array\nimport navigation from '@src/navigation/horizontal'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Utils\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\n\nconst HorizontalNavMenuLink = ({\n  item,\n  setOpenDropdown,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  routerProps,\n  currentActiveItem,\n  isChild\n}) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** URL Vars\n  const location = useLocation()\n  const currentURL = location.pathname\n\n  const navLinkActive = isNavLinkActive(item.navLink, currentURL, routerProps)\n\n  // ** Get parents of current items\n  const searchParents = (navigation, currentURL) => {\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\n    allParents.pop()\n    return allParents\n  }\n\n  // ** Remove all items from OpenDropdown array\n  const resetOpenDropdowns = () => setOpenDropdown([])\n\n  // ** On mount update active group array\n  useEffect(() => {\n    if (currentActiveItem !== null) {\n      setActiveItem(currentActiveItem)\n      const arr = searchParents(navigation, currentURL)\n      setGroupActive([...arr])\n    }\n  }, [location])\n\n  return (\n    <li\n      className={classnames('nav-item', {\n        active: item.navLink === activeItem,\n        disabled: item.disabled\n      })}\n      onClick={resetOpenDropdowns}\n    >\n      <LinkTag\n        className={classnames('d-flex align-items-center', {\n          'dropdown-item': isChild,\n          'nav-link': !isChild\n        })}\n        tag={LinkTag}\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              isActive: (match, location) => {\n                if (!match) {\n                  return false\n                }\n\n                if (match.url && match.url !== '' && match.url === item.navLink) {\n                  currentActiveItem = item.navLink\n                }\n              }\n            })}\n        /*eslint-enable */\n      >\n        {item.icon}\n        <span>{item.title}</span>\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default HorizontalNavMenuLink\n","// ** React Imports\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap'\n\n// ** Utils\nimport { isNavGroupActive } from '@layouts/utils'\n\n// ** Horizontal Menu Items Component\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst HorizontalNavMenuGroup = props => {\n  // ** Props\n  const {\n    item,\n    submenu,\n    groupActive,\n    onMouseEnter,\n    onMouseLeave,\n    openDropdown,\n    setGroupActive,\n    activeItem,\n    setActiveItem,\n    routerProps,\n    setOpenDropdown,\n    currentActiveItem\n  } = props\n\n  // ** URL Var\n  const currentURL = useLocation().pathname\n\n  // ** Dropdown menu modifiers\n  const menuModifiers = {\n    setMaxHeight: {\n      enabled: true,\n      fn: data => {\n        const pageHeight = window.innerHeight,\n          ddTop = data.instance.reference.getBoundingClientRect().top,\n          ddHeight = data.popper.height\n        let maxHeight, stylesObj\n\n        // ** Calculate and set height\n        if (pageHeight - ddTop - ddHeight - 28 < 1) {\n          maxHeight = pageHeight - ddTop - 25\n          stylesObj = {\n            maxHeight,\n            overflowY: 'auto'\n          }\n        }\n\n        const ddRef = data.instance.popper.getBoundingClientRect()\n\n        // ** If there is not space left to open sub menu open it to the right\n        if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\n          data.instance.popper.closest('.dropdown').classList.add('openLeft')\n        }\n\n        return {\n          ...data,\n          styles: {\n            ...stylesObj\n          }\n        }\n      }\n    }\n  }\n  return (\n    <Dropdown\n      tag='li'\n      className={classnames({\n        'nav-item': submenu === false,\n        'dropdown-submenu': submenu === true,\n        'sidebar-group-active active':\n          isNavGroupActive(item.children, currentURL, routerProps) || groupActive.includes(item.id)\n      })}\n      isOpen={openDropdown.includes(item.id)}\n      toggle={() => onMouseEnter(item.id)}\n      onMouseEnter={() => onMouseEnter(item.id)}\n      onMouseLeave={() => onMouseLeave(item.id)}\n    >\n      <DropdownToggle\n        to='/'\n        tag={Link}\n        className={classnames('dropdown-toggle d-flex align-items-center', {\n          'dropdown-item': submenu === true,\n          'nav-link': submenu === false\n        })}\n        onClick={e => e.preventDefault()}\n      >\n        {item.icon}\n        <span>{item.title}</span>\n      </DropdownToggle>\n      <DropdownMenu tag='ul' modifiers={menuModifiers}>\n        <HorizontalNavMenuItems\n          submenu={true}\n          parentItem={item}\n          items={item.children}\n          activeItem={activeItem}\n          groupActive={groupActive}\n          routerProps={routerProps}\n          openDropdown={openDropdown}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          setActiveItem={setActiveItem}\n          setGroupActive={setGroupActive}\n          isChild={true}\n          setOpenDropdown={setOpenDropdown}\n          currentActiveItem={currentActiveItem}\n        />\n      </DropdownMenu>\n    </Dropdown>\n  )\n}\n\nexport default HorizontalNavMenuGroup\n","// ** Menu Components Imports\nimport HorizontalNavMenuLink from './HorizontalNavMenuLink'\nimport HorizontalNavMenuGroup from './HorizontalNavMenuGroup'\nimport { resolveHorizontalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\n\nconst HorizontalNavMenuItems = props => {\n  // ** Components Object\n  const Components = {\n    HorizontalNavMenuGroup,\n    HorizontalNavMenuLink\n  }\n\n  // ** Render Nav Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n\n    return <TagName item={item} index={index} key={item.id} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default HorizontalNavMenuItems\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Horizontal Menu Array\nimport navigation from '@src/navigation/horizontal'\n\n// ** Horizontal Menu Components\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst HorizontalMenu = ({ currentActiveItem, routerProps }) => {\n  // ** States\n  const [activeItem, setActiveItem] = useState(null)\n  const [groupActive, setGroupActive] = useState([])\n  const [openDropdown, setOpenDropdown] = useState([])\n\n  // ** On mouse enter push the ID to openDropdown array\n  const onMouseEnter = id => {\n    const arr = openDropdown\n    arr.push(id)\n    setOpenDropdown([...arr])\n  }\n\n  // ** On mouse leave remove the ID to openDropdown array\n  const onMouseLeave = id => {\n    const arr = openDropdown\n    arr.splice(arr.indexOf(id), 1)\n    setOpenDropdown([...arr])\n  }\n\n  return (\n    <div className='navbar-container main-menu-content'>\n      <ul className='nav navbar-nav' id='main-menu-navigation'>\n        <HorizontalNavMenuItems\n          submenu={false}\n          items={navigation}\n          activeItem={activeItem}\n          groupActive={groupActive}\n          routerProps={routerProps}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          openDropdown={openDropdown}\n          setActiveItem={setActiveItem}\n          setGroupActive={setGroupActive}\n          setOpenDropdown={setOpenDropdown}\n          currentActiveItem={currentActiveItem}\n        />\n      </ul>\n    </div>\n  )\n}\n\nexport default HorizontalMenu\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuHidden, handleContentWidth } from '@store/actions/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\nimport ScrollToTop from 'react-scroll-up'\nimport { Navbar, NavItem, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\nimport Customizer from '@components/customizer'\nimport NavbarComponent from './components/navbar'\nimport FooterComponent from './components/footer'\nimport MenuComponent from './components/menu/horizontal-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/horizontal-menu.scss'\n\nconst HorizontalLayout = props => {\n  // ** Props\n  const { children, navbar, footer, menu, currentActiveItem, routerProps } = props\n\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const [navbarType, setNavbarType] = useNavbarType()\n  const [footerType, setFooterType] = useFooterType()\n  const [navbarColor, setNavbarColor] = useNavbarColor()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Vars\n  const contentWidth = layoutStore.contentWidth\n  const isHidden = layoutStore.menuHidden\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  // ** UseEffect Cleanup\n  const cleanup = () => {\n    setIsMounted(false)\n    setNavbarScrolled(false)\n  }\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    window.addEventListener('scroll', function () {\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\n        setNavbarScrolled(true)\n      }\n      if (window.pageYOffset < 65) {\n        setNavbarScrolled(false)\n      }\n    })\n    return () => cleanup()\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static'\n  }\n\n  const navbarClasses = {\n    floating: 'floating-nav',\n    sticky: 'fixed-top'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div\n      className={classnames(\n        `wrapper horizontal-layout horizontal-menu ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\n          footerClasses[footerType] || 'footer-static'\n        } menu-expanded`\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      <Navbar\n        expand='lg'\n        className={classnames('header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center', {\n          'navbar-scrolled': navbarScrolled\n        })}\n      >\n        {!navbar && (\n          <div className='navbar-header d-xl-block d-none'>\n            <ul className='nav navbar-nav'>\n              <NavItem>\n                <Link to='/' className='navbar-brand'>\n                  <span className='brand-logo'>\n                    <img src={themeConfig.app.appLogoImage} alt='logo' />\n                  </span>\n                  <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n                </Link>\n              </NavItem>\n            </ul>\n          </div>\n        )}\n\n        <div className='navbar-container d-flex content'>\n          {navbar ? navbar : <NavbarComponent skin={skin} setSkin={setSkin} />}\n        </div>\n      </Navbar>\n      {!isHidden ? (\n        <div className='horizontal-menu-wrapper'>\n          <Navbar\n            tag='div'\n            expand='sm'\n            light={skin !== 'dark'}\n            dark={skin === 'dark' || bgColorCondition}\n            className={classnames(`header-navbar navbar-horizontal navbar-shadow menu-border`, {\n              [navbarClasses[navbarType]]: navbarType !== 'static',\n              'floating-nav': (!navbarClasses[navbarType] && navbarType !== 'static') || navbarType === 'floating'\n            })}\n          >\n            {menu ? menu : <MenuComponent routerProps={routerProps} currentActiveItem={currentActiveItem} />}\n          </Navbar>\n        </div>\n      ) : null}\n\n      {children}\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          setSkin={setSkin}\n          footerType={footerType}\n          setFooterType={setFooterType}\n          navbarType={navbarType}\n          setNavbarType={setNavbarType}\n          navbarColor={navbarColor}\n          setNavbarColor={setNavbarColor}\n          isRtl={isRtl}\n          setIsRtl={setIsRtl}\n          layout={props.layout}\n          setLayout={props.setLayout}\n          isHidden={isHidden}\n          setIsHidden={setIsHidden}\n          contentWidth={contentWidth}\n          setContentWidth={setContentWidth}\n          transition={props.transition}\n          setTransition={props.setTransition}\n          themeConfig={themeConfig}\n        />\n      ) : null}\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\nexport default HorizontalLayout\n","// !Do not remove the Layout import\nimport Layout from '@layouts/HorizontalLayout'\n\nconst HorizontalLayout = props => <Layout {...props}>{props.children}</Layout>\n\nexport default HorizontalLayout\n","// ** React Imports\nimport { Suspense, useContext, lazy } from 'react'\n\n// ** Utils\nimport { isUserLoggedIn } from '@utils'\nimport { useLayout } from '@hooks/useLayout'\nimport { AbilityContext } from '@src/utility/context/Can'\nimport { useRouterTransition } from '@hooks/useRouterTransition'\n\n// ** Custom Components\n// import Spinner from '@components/spinner/Loading-spinner' // Uncomment if your require content fallback\nimport LayoutWrapper from '@layouts/components/layout-wrapper'\n\n// ** Router Components\nimport { BrowserRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom'\n\n// ** Routes & Default Routes\nimport { DefaultRoute, Routes } from './routes'\n\n// ** Layouts\nimport BlankLayout from '@layouts/BlankLayout'\nimport VerticalLayout from '@src/layouts/VerticalLayout'\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\n\nconst Router = () => {\n  // ** Hooks\n  const [layout, setLayout] = useLayout()\n  const [transition, setTransition] = useRouterTransition()\n\n  // ** ACL Ability Context\n  const ability = useContext(AbilityContext)\n\n  // ** Default Layout\n  const DefaultLayout = layout === 'horizontal' ? 'HorizontalLayout' : 'VerticalLayout'\n\n  // ** All of the available layouts\n  const Layouts = { BlankLayout, VerticalLayout, HorizontalLayout }\n\n  // ** Current Active Item\n  const currentActiveItem = null\n\n  // ** Return Filtered Array of Routes & Paths\n  const LayoutRoutesAndPaths = layout => {\n    const LayoutRoutes = []\n    const LayoutPaths = []\n\n    if (Routes) {\n      Routes.filter(route => {\n        // ** Checks if Route layout or Default layout matches current layout\n        if (route.layout === layout || (route.layout === undefined && DefaultLayout === layout)) {\n          LayoutRoutes.push(route)\n          LayoutPaths.push(route.path)\n        }\n      })\n    }\n\n    return { LayoutRoutes, LayoutPaths }\n  }\n\n  const NotAuthorized = lazy(() => import('@src/views/NotAuthorized'))\n\n  // ** Init Error Component\n  const Error = lazy(() => import('@src/views/Error'))\n\n  /**\n   ** Final Route Component Checks for Login & User Role and then redirects to the route\n   */\n  const FinalRoute = props => {\n    const route = props.route\n    let action, resource\n\n    // ** Assign vars based on route meta\n    if (route.meta) {\n      action = route.meta.action ? route.meta.action : null\n      resource = route.meta.resource ? route.meta.resource : null\n    }\n\n    if (\n      (!isUserLoggedIn() && route.meta === undefined) ||\n      (!isUserLoggedIn() && route.meta && !route.meta.authRoute && !route.meta.publicRoute)\n    ) {\n      /**\n       ** If user is not Logged in & route meta is undefined\n       ** OR\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\n       ** Then redirect user to login\n       */\n\n      return <Redirect to='/login' />\n    } else if (route.meta && route.meta.authRoute && isUserLoggedIn()) {\n      // ** If route has meta and authRole and user is Logged in then redirect user to home page (DefaultRoute)\n      return <Redirect to='/' />\n    } else if (isUserLoggedIn() && !ability.can(action || 'read', resource)) {\n      // ** If user is Logged in and doesn't have ability to visit the page redirect the user to Not Authorized\n      return <Redirect to='/misc/not-authorized' />\n    } else {\n      // ** If none of the above render component\n      return <route.component {...props} />\n    }\n  }\n\n  // ** Return Route to Render\n  const ResolveRoutes = () => {\n    return Object.keys(Layouts).map((layout, index) => {\n      // ** Convert Layout parameter to Layout Component\n      // ? Note: make sure to keep layout and component name equal\n\n      const LayoutTag = Layouts[layout]\n\n      // ** Get Routes and Paths of the Layout\n      const { LayoutRoutes, LayoutPaths } = LayoutRoutesAndPaths(layout)\n\n      // ** We have freedom to display different layout for different route\n      // ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\n      // ** that we want to implement like VerticalLayout or HorizontalLayout\n      // ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\n\n      // ** RouterProps to pass them to Layouts\n      const routerProps = {}\n\n      return (\n        <Route path={LayoutPaths} key={index}>\n          <LayoutTag\n            routerProps={routerProps}\n            layout={layout}\n            setLayout={setLayout}\n            transition={transition}\n            setTransition={setTransition}\n            currentActiveItem={currentActiveItem}\n          >\n            <Switch>\n              {LayoutRoutes.map(route => {\n                return (\n                  <Route\n                    key={route.path}\n                    path={route.path}\n                    exact={route.exact === true}\n                    render={props => {\n                      // ** Assign props to routerProps\n                      Object.assign(routerProps, {\n                        ...props,\n                        meta: route.meta\n                      })\n\n                      return (\n                        <Suspense fallback={null}>\n                          {/* Layout Wrapper to add classes based on route's layout, appLayout and className */}\n                          <LayoutWrapper\n                            layout={DefaultLayout}\n                            transition={transition}\n                            setTransition={setTransition}\n                            /* Conditional props */\n                            /*eslint-disable */\n                            {...(route.appLayout\n                              ? {\n                                  appLayout: route.appLayout\n                                }\n                              : {})}\n                            {...(route.meta\n                              ? {\n                                  routeMeta: route.meta\n                                }\n                              : {})}\n                            {...(route.className\n                              ? {\n                                  wrapperClass: route.className\n                                }\n                              : {})}\n                            /*eslint-enable */\n                          >\n                            <route.component {...props} />\n                            {/* <FinalRoute route={route} {...props} /> */}\n                          </LayoutWrapper>\n                        </Suspense>\n                      )\n                    }}\n                  />\n                )\n              })}\n            </Switch>\n          </LayoutTag>\n        </Route>\n      )\n    })\n  }\n\n  return (\n    <AppRouter basename={process.env.REACT_APP_BASENAME}>\n      <Switch>\n        {/* If user is logged in Redirect user to DefaultRoute else to login */}\n        {/* <Route\n          exact\n          path='/'\n          render={() => {\n            return isUserLoggedIn() ? <Redirect to={DefaultRoute} /> : <Redirect to='/login' />\n          }}\n        /> */}\n        <Route\n          exact\n          path='/'\n          render={() => {\n            return <Redirect to={DefaultRoute} />\n          }}\n        />\n        {/* Not Auth Route */}\n        <Route\n          exact\n          path='/not-authorized'\n          render={props => (\n            <Layouts.BlankLayout>\n              <NotAuthorized />\n            </Layouts.BlankLayout>\n          )}\n        />\n        {ResolveRoutes()}\n        {/* NotFound Error page */}\n        <Route path='*' component={Error} />/\n      </Switch>\n    </AppRouter>\n  )\n}\n\nexport default Router\n","//** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\nexport const useLayout = () => {\n  // ** States\n  const [lastLayout, setLastLayout] = useState(null)\n  const [layout, setLayout] = useState(() => {\n    try {\n      return themeConfig.layout.type\n    } catch (error) {\n      // ** If error return initialValue\n      console.log(error)\n      return themeConfig.layout.type\n    }\n  })\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(layout) : value\n\n      // ** Set state\n      setLayout(valueToStore)\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  const handleLayout = () => {\n    // ** If layout is horizontal & screen size is equals to or below 1200\n    if (layout === 'horizontal' && window.innerWidth <= 1200) {\n      setLayout('vertical')\n      setLastLayout('horizontal')\n    }\n    // ** If lastLayout is horizontal & screen size is equals to or above 1200\n    if (lastLayout === 'horizontal' && window.innerWidth >= 1200) {\n      setLayout('horizontal')\n    }\n  }\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    handleLayout()\n  }, [])\n\n  useEffect(() => {\n    // ** Window Resize Event\n    window.addEventListener('resize', handleLayout)\n  }, [layout, lastLayout])\n\n  return [layout, setValue]\n}\n","//** React Imports\nimport { useState } from 'react'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\nexport const useRouterTransition = () => {\n  // ** State\n  const [transition, setTransition] = useState(() => {\n    try {\n      return themeConfig.layout.routerTransition\n    } catch (error) {\n      // ** If error return initialValue\n      console.log(error)\n      return themeConfig.layout.routerTransition\n    }\n  })\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(transition) : value\n\n      // ** Set state\n      setTransition(valueToStore)\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  return [transition, setValue]\n}\n","// ** Router Import\nimport Router from './router/Router'\n\nconst App = props => <Router />\n\nexport default App\n","// ** Checks if an object is empty (returns boolean)\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\n\n// ** Returns K format from a number\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\n\n// ** Converts HTML to string\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\n\n// ** Checks if the passed date is today\nconst isToday = date => {\n  const today = new Date()\n  return (\n    /* eslint-disable operator-linebreak */\n    date.getDate() === today.getDate() &&\n    date.getMonth() === today.getMonth() &&\n    date.getFullYear() === today.getFullYear()\n    /* eslint-enable */\n  )\n}\n\n/**\n ** Format and return date in Humanize format\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\n * @param {String} value date to format\n * @param {Object} formatting Intl object to format with\n */\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\n  if (!value) return value\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\n}\n\n// ** Returns short month of passed date\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\n  const date = new Date(value)\n  let formatting = { month: 'short', day: 'numeric' }\n\n  if (toTimeForCurrentDay && isToday(date)) {\n    formatting = { hour: 'numeric', minute: 'numeric' }\n  }\n\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\n}\n\n/**\n ** Return if user is logged in\n ** This is completely up to you and how you want to store the token in your frontend application\n *  ? e.g. If you are using cookies to store the application please update this function\n */\nexport const isUserLoggedIn = () => localStorage.getItem('userData')\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'))\n\n/**\n ** This function is used for demo purpose route navigation\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\n ** Please note role field is just for showing purpose it's not used by anything in frontend\n ** We are checking role just for ease\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\n * @param {String} userRole Role of user\n */\nexport const getHomeRouteForLoggedInUser = userRole => {\n  if (userRole === 'admin') return '/'\n  if (userRole === 'client') return '/access-control'\n  return '/login'\n}\n\n// ** React Select Theme Colors\nexport const selectThemeColors = theme => ({\n  ...theme,\n  colors: {\n    ...theme.colors,\n    primary25: '#7367f01a', // for option hover bg-color\n    primary: '#7367f0', // for selected option bg-color\n    neutral10: '#7367f0', // for tags bg-color\n    neutral20: '#ededed', // for input border-color\n    neutral30: '#ededed' // for input hover border-color\n  }\n})\n","// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Badge } from 'reactstrap'\nimport classnames from 'classnames'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    color,\n    className,\n    imgClassName,\n    initials,\n    size,\n    badgeUp,\n    content,\n    icon,\n    badgeColor,\n    badgeText,\n    img,\n    imgHeight,\n    imgWidth,\n    status,\n    tag: Tag,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  imgClassName: Proptypes.string,\n  className: Proptypes.string,\n  src: Proptypes.string,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  icon: Proptypes.node,\n  contentStyles: Proptypes.object,\n  badgeText: Proptypes.string,\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n","// ** Handles Layout Content Width (full / boxed)\nexport const handleContentWidth = value => dispatch => dispatch({ type: 'HANDLE_CONTENT_WIDTH', value })\n\n// ** Handles Menu Collapsed State (Bool)\nexport const handleMenuCollapsed = value => dispatch => dispatch({ type: 'HANDLE_MENU_COLLAPSED', value })\n\n// ** Handles Menu Hidden State (Bool)\nexport const handleMenuHidden = value => dispatch => dispatch({ type: 'HANDLE_MENU_HIDDEN', value })\n\n// ** Handles RTL (Bool)\nexport const handleRTL = value => dispatch => dispatch({ type: 'HANDLE_RTL', value })\n","//** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\nexport const useSkin = () => {\n  // ** State\n  const [skin, setSkin] = useState(() => {\n    try {\n      // ** Get from local storage by key\n      const item = window.localStorage.getItem('skin')\n      // ** Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : themeConfig.layout.skin\n    } catch (error) {\n      // ** If error also return initialValue\n      console.log(error)\n      return themeConfig.layout.skin\n    }\n  })\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(skin) : value\n      // ** Set state\n      setSkin(valueToStore)\n      // ** Save to local storage\n      window.localStorage.setItem('skin', JSON.stringify(valueToStore))\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    // ** Get Body Tag\n    const element = window.document.body\n\n    // ** Define classnames for skins\n    const classNames = {\n      dark: 'dark-layout',\n      bordered: 'bordered-layout',\n      'semi-dark': 'semi-dark-layout'\n    }\n\n    // ** Remove all classes from Body on mount\n    element.classList.remove(...element.classList)\n\n    // ** If skin is not light add skin class\n    if (skin !== 'light') {\n      element.classList.add(classNames[skin])\n    }\n  }, [skin])\n\n  return [skin, setValue]\n}\n","//** React Imports\nimport { useEffect } from 'react'\n\n// ** Store & Actions\nimport { handleRTL } from '@store/actions/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useRTL = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const isRtl = useSelector(state => state.layout.isRTL)\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    try {\n      // ** Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(isRtl) : value\n      dispatch(handleRTL(valueToStore))\n    } catch (error) {\n      // ** A more advanced implementation would handle the error case\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    // ** Get HTML Tag\n    const element = document.getElementsByTagName('html')[0]\n\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\n    if (isRtl) {\n      element.setAttribute('dir', 'rtl')\n    } else {\n      element.setAttribute('dir', 'ltr')\n    }\n  }, [isRtl])\n\n  return [isRtl, setValue]\n}\n"],"sourceRoot":""}